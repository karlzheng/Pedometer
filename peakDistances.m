%% Nest Interview
% Spencer Barton
% 9/13/14

clear all;
close all;

FILENAME = 'accel.csv';
Fs = 20; % Hz
STEPS = 20;

data = csvread(FILENAME); % x,y,z

nSamples = size(data,1);
time = linspace(0, nSamples / Fs, nSamples);

figure; plot(time, data);

% Normalize - note no sqrt because won't have that in final implentation
data = sum(data.^2, 2) - 1;


%% Peak detection with band pass filtered data
% Goals: 
% - determine threshold for peak distances
% - determine window size for min-max peak pairs
%
% Based off of bpf we have lower limit of 1Hz to upper lim of 3Hz for step
% freq. This means when looking for peaks know that there will be no peaks
% appearing in less than Fs/3Hz ~= 6 samples and nothing greater than
% Fs/1Hz ~= 20 samples. Since I am looking for max/min pairs the min
% distance is 3 samples. The greater limit will likely be contrained by
% step dynamics.

%% Filter
b = [0.00244140625, 0.00390625, 0.00390625, 0.001953125, -0.001953125, -0.00439453125, 0.0, 0.00830078125, 0.0078125, -0.0146484375, -0.05908203125, -0.1025390625, -0.107421875, -0.04931640625, 0.056640625, 0.15966796875, 0.20263671875, 0.15966796875, 0.056640625, -0.04931640625, -0.107421875, -0.1025390625, -0.05908203125, -0.0146484375, 0.0078125, 0.00830078125, 0.0, -0.00439453125, -0.001953125, 0.001953125, 0.00390625, 0.00390625, 0.00244140625];
b2 = fir1(32, [.1 .3]);
bpData = filter(b2,1,data);

filterQuantizationError = sum((b - b2).^2)

% Just trying out filter implementation
buff = zeros(1,33);
bp2Data = zeros(1,length(data));
for i = 1:length(data)
   buff = circshift(buff,[0 1]);
   buff(1) = data(i);
   bp2Data(i) = sum(b.*buff);
end

cProgData = [-0.00048828125, -0.0009765625, -0.00146484375, -0.001953125, -0.001953125, -0.001953125, -0.001953125, -0.00244140625, -0.0029296875, -0.0029296875, -0.00244140625, -0.00146484375, -0.0009765625, -0.00146484375, -0.00244140625, -0.00390625, -0.005859375, -0.00634765625, -0.0078125, -0.0087890625, -0.0078125, -0.0068359375, -0.00537109375, -0.00390625, -0.00390625, -0.00390625, -0.00537109375, -0.0087890625, -0.01171875, -0.01318359375, -0.0126953125, -0.01123046875, -0.00830078125, -0.00634765625, -0.00390625, -0.0048828125, -0.0078125, -0.009765625, -0.01025390625, -0.009765625, -0.0078125, -0.0068359375, -0.0087890625, -0.0087890625, -0.0078125, -0.0078125, -0.0087890625, -0.01025390625, -0.01171875, -0.013671875, -0.01220703125, -0.0068359375, -0.00048828125, 0.0009765625, -0.00341796875, -0.01025390625, -0.01708984375, -0.01904296875, -0.01318359375, -0.0029296875, 0.0068359375, 0.0107421875, 0.00244140625, -0.0087890625, -0.01708984375, -0.02734375, -0.03564453125, -0.048828125, -0.07373046875, -0.09326171875, -0.0888671875, -0.0400390625, 0.04833984375, 0.14208984375, 0.20166015625, 0.20166015625, 0.15087890625, 0.0849609375, 0.02099609375, -0.05859375, -0.1904296875, -0.35791015625, -0.49267578125, -0.4931640625, -0.29833984375, 0.0380859375, 0.37060546875, 0.5654296875, 0.56298828125, 0.41455078125, 0.2060546875, 0.0107421875, -0.16357421875, -0.3095703125, -0.43701171875, -0.51123046875, -0.4755859375, -0.31787109375, -0.029296875, 0.36279296875, 0.740234375, 0.92578125, 0.767578125, 0.234375, -0.48974609375, -1.0439453125, -1.12255859375, -0.6796875, 0.041015625, 0.673828125, 0.93017578125, 0.791015625, 0.4296875, 0.05126953125, -0.22802734375, -0.38037109375, -0.4677734375, -0.49853515625, -0.46142578125, -0.357421875, -0.177734375, 0.09130859375, 0.4189453125, 0.70703125, 0.7841796875, 0.4912109375, -0.14453125, -0.80908203125, -1.11376953125, -0.81689453125, -0.02880859375, 0.8212890625, 1.28076171875, 1.16015625, 0.60205078125, -0.04833984375, -0.49267578125, -0.64697265625, -0.58544921875, -0.47021484375, -0.38720703125, -0.34716796875, -0.29345703125, -0.126953125, 0.1943359375, 0.60888671875, 0.90625, 0.8349609375, 0.2939453125, -0.49365234375, -1.09765625, -1.13525390625, -0.56103515625, 0.287109375, 0.92626953125, 1.04443359375, 0.70947265625, 0.21484375, -0.1474609375, -0.2802734375, -0.2744140625, -0.29443359375, -0.37646484375, -0.45068359375, -0.41943359375, -0.2109375, 0.158203125, 0.5595703125, 0.81201171875, 0.751953125, 0.3125, -0.349609375, -0.8994140625, -1.03857421875, -0.6767578125, -0.00439453125, 0.615234375, 0.9052734375, 0.79833984375, 0.43359375, 0.0234375, -0.27587890625, -0.423828125, -0.4794921875, -0.47509765625, -0.41748046875, -0.28173828125, -0.02685546875, 0.35400390625, 0.7421875, 0.923828125, 0.68994140625, 0.0087890625, -0.83984375, -1.37158203125, -1.2197265625, -0.40380859375, 0.65283203125, 1.3701171875, 1.4140625, 0.87451171875, 0.13134765625, -0.4287109375, -0.6376953125, -0.6171875, -0.54345703125, -0.50927734375, -0.48046875, -0.3447265625, -0.0205078125, 0.423828125, 0.80322265625, 0.9267578125, 0.671875, 0.10302734375, -0.5283203125, -0.8916015625, -0.82373046875, -0.37255859375, 0.205078125, 0.61279296875, 0.71826171875, 0.5517578125, 0.2421875, -0.06787109375, -0.30908203125, -0.48193359375, -0.56103515625, -0.5341796875, -0.40185546875, -0.1669921875, 0.1611328125, 0.50439453125, 0.75, 0.76904296875, 0.47314453125, -0.06298828125, -0.57275390625, -0.787109375, -0.5810546875, -0.07861328125, 0.40625, 0.61328125, 0.4873046875, 0.1923828125, -0.07177734375, -0.18310546875, -0.1953125, -0.1962890625, -0.255859375, -0.33935546875, -0.3720703125, -0.3154296875, -0.14599609375, 0.12158203125, 0.4296875, 0.65625, 0.6494140625, 0.3173828125, -0.24267578125, -0.75732421875, -0.91552734375, -0.59619140625, 0.0439453125, 0.66552734375, 0.95849609375, 0.85302734375, 0.49267578125, 0.08837890625, -0.220703125, -0.42822265625, -0.58544921875, -0.68701171875, -0.66748046875, -0.48486328125, -0.13623046875, 0.3095703125, 0.71142578125, 0.9443359375, 0.90869140625, 0.55908203125, -0.03466796875, -0.65283203125, -1.05615234375, -1.0634765625, -0.67138671875, -0.0576171875, 0.51513671875, 0.85302734375, 0.89990234375, 0.7001953125, 0.3642578125, 0.00048828125, -0.33984375, -0.60107421875, -0.7587890625, -0.76708984375, -0.58740234375, -0.19091796875, 0.33984375, 0.84033203125, 1.087890625, 0.9189453125, 0.3505859375, -0.35693359375, -0.859375, -0.92236328125, -0.54296875, 0.01806640625, 0.44091796875, 0.5390625, 0.3515625, 0.06494140625, -0.1357421875, -0.1865234375, -0.1376953125, -0.0869140625, -0.07080078125, -0.0712890625, -0.046875, 0.00634765625, 0.05078125, 0.04931640625, 0.001953125, -0.046875, -0.04443359375, 0.01513671875, 0.08251953125, 0.109375, 0.06494140625, -0.03076171875, -0.12255859375, -0.166015625, -0.14453125, -0.07470703125, 0.0048828125, 0.07080078125, 0.10205078125, 0.09716796875, 0.05615234375, -0.00341796875, -0.06005859375, -0.08837890625, -0.078125, -0.04052734375, 0.00634765625, 0.0400390625, 0.05126953125, 0.03662109375, 0.01416015625, -0.009765625, -0.02685546875, -0.0380859375, -0.03857421875, -0.03076171875, -0.01806640625, -0.0048828125, 0.0029296875, 0.0048828125, 0.00439453125, -0.00244140625, -0.00439453125, -0.0078125, -0.00830078125, -0.0068359375, -0.0078125, -0.00830078125, -0.00732421875, -0.0078125, -0.00634765625, -0.0068359375, -0.00634765625, -0.005859375, -0.00537109375, -0.0068359375, -0.00830078125, -0.01025390625, -0.00927734375, -0.0087890625, -0.005859375, -0.00341796875, -0.00341796875, -0.0029296875, -0.00341796875, -0.00634765625, -0.0068359375, -0.0087890625, -0.009765625, -0.0107421875, -0.0107421875, -0.0078125, -0.0068359375, -0.0029296875, 0.0, -0.00244140625, -0.005859375, -0.0068359375, -0.0087890625, -0.01025390625, -0.0078125];
figure; 
subplot(211); plot(time, bpData, time, bp2Data, time, cProgData);
title('filtering comparisons');
subplot(212); plot(time, abs(bpData - cProgData'));
title('c prog error')

%% Find peaks
% Find max peaks
[maxPeaks, maxLocations] = findpeaks(bpData);

% Find min peaks
[minPeaks, minLocations] = findpeaks(-bpData);

%% Find peak height/time distances
% Find min-max pair distances
len = min(length(maxPeaks), length(minPeaks));
peakDist = maxPeaks(1:len) + minPeaks(1:len);

% Find min-max pair time distance
locDist = maxLocations(1:len) - minLocations(1:len);

%% Find good threshold for distances
% Actual steps
stepIndeces = (peakDist > .3);
stepPeakDist = peakDist .* stepIndeces;
stepPeakDist(stepIndeces==0) = []; % remove 0's

% Non-steps
nonStepPeak = peakDist .* (1-stepIndeces);
nonStepPeak(nonStepPeak==0) = []; % remove 0's

% Theshold is distance between two distributions
% Simply take midpoint between two wieghted groupings
probStepPeak = sum(stepIndeces) / length(stepIndeces)
probNonStepPeak = 1-probStepPeak
threshold = (mean(stepPeakDist)*probStepPeak - mean(nonStepPeak)*probNonStepPeak) / 2

%% Find good window size to search for min/max pairs

% update with only step pairs
locDist(stepIndeces==0) = [];

lowerWindowBound = 3 % see comments earlier
upperWindowBound = max(locDist)

%% Plots

% Plot peak distance
figure; subplot(2,1,1);
stem(time(maxLocations(stepIndeces==1)), peakDist(stepIndeces==1), 'bo'); % steps
hold on;
stem(time(maxLocations(stepIndeces==0)), peakDist(stepIndeces==0), 'ro'); % non-steps
hold on; plot(time, threshold);
title(['min-max peak pair distance, ', num2str(threshold)]); xlabel('sec');
subplot(2,1,2);
hist(peakDist); title('step peak dists, note seperation in distributions'); 

% plot peak distances
figure;
hist(locDist); title('Time distance in peak pairs (between min and max)');

% Plot time data with min/max marked
figure; plot(time, bpData); 
hold on
plot(time(maxLocations), maxPeaks, 'ro');
plot(time(minLocations), -minPeaks, 'go');
title('Band pass peaks data');
xlabel('sec'); ylabel('mag');